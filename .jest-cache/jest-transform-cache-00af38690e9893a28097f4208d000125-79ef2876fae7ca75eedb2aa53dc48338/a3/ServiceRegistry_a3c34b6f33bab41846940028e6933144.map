{"file":"E:\\Freelancer\\nodejs-api-wrapper\\src\\container\\ServiceRegistry.ts","mappings":";;;;;AAAA,4DAAoC;AACpC,wEAAgD;AAChD,4DAAoC;AAEpC,MAAM,eAAe;IACnB,MAAM,CAAC,QAAQ;QACb,mCAAmC;QACnC,mBAAS,CAAC,QAAQ,CAAC,aAAa,EAAE,GAAG,EAAE,CAAC,IAAI,qBAAW,EAAE,CAAC,CAAC;QAE3D,sBAAsB;QACtB,mBAAS,CAAC,iBAAiB,CAAC,QAAQ,EAAE,gBAAM,CAAC,CAAC;IAChD,CAAC;IAED,MAAM,CAAC,UAAU,CAAI,UAAkB;QACrC,OAAO,mBAAS,CAAC,OAAO,CAAI,UAAU,CAAC,CAAC;IAC1C,CAAC;CACF;AAED,kBAAe,eAAe,CAAC","names":[],"sources":["E:\\Freelancer\\nodejs-api-wrapper\\src\\container\\ServiceRegistry.ts"],"sourcesContent":["import Container from './Container';\nimport UserService from '@services/UserService';\nimport Logger from '@config/Logger';\n\nclass ServiceRegistry {\n  static register(): void {\n    // Register services with factories\n    Container.register('UserService', () => new UserService());\n\n    // Register singletons\n    Container.registerSingleton('Logger', Logger);\n  }\n\n  static getService<T>(identifier: string): T {\n    return Container.resolve<T>(identifier);\n  }\n}\n\nexport default ServiceRegistry;\n"],"version":3}